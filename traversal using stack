package binaryTree;

import java.util.ArrayList;
import java.util.Stack;

public class preorderStack {
    static class  Node {
        int data;
        Node left;
        Node right;
        Node (int data){
            this.data= data;
            this.left=null;
            this.right=null;
        }        
    }
    public static ArrayList<Integer> preOrder(Node root){
        if(root == null) return null;
        ArrayList<Integer> list = new ArrayList<>();
        Stack<Node> s = new Stack<>();
        s.push(root);
        while(!s.isEmpty()){
            root = s.pop();
            list.add(root.data);
            if(root.right != null){
                s.push(root.right);
            }
            if(root.left != null){
                s.push(root.left);
            }
        }
        return list;
    }
    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);
        ArrayList<Integer> list = preOrder(root);
        for (int element : list) {
            System.out.println(element);  
        }
    }
}
